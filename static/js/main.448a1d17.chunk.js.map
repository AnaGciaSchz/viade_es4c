{"version":3,"sources":["services/provider.js","components/NavBar/Login/login.component.js","components/NavBar/Login/index.js","components/NavBar/Login/login-modal.component.js","components/NavBar/Register/ProviderItem/index.js","components/NavBar/Register/ProviderItem/provider.item.component.js","components/NavBar/Register/register.component.js","components/NavBar/Register/register.container.js","components/NavBar/Register/index.js","components/NavBar/Register/register-modal.component.js","components/NavBar/index.js","components/NavBar/nav-bar.component.js","viade/Model/route-viade.js","viade/Model/image-viade.js","viade/Model/item-viade.js","viade/Model/video-viade.js","viade/Model/notification-viade.js","viade/Parsers/ParserToRDF/route-to-RDF.js","viade/Parsers/ParserFromRDF/RDF-to-route.js","viade/Parsers/ParserToRoute/ParsersTypes/geoJSON-to-route.js","viade/Parsers/ParserToRoute/parser-to-route.js","utils/ldflex-helper.js","utils/permissions.js","utils/notification-helper.js","utils/sparql-fiddle.js","viade/Parsers/Notification/rdf-to-notification.js","viade/Parsers/Notification/notification-to-rdf.js","components/AuthNavBar/UploadButton/upload.component.js","components/AuthNavBar/UploadButton/index.js","components/AuthNavBar/UploadButton/upload-modal.component.js","components/AuthNavBar/index.js","components/AuthNavBar/auth-nav-bar.component.js","components/ErrorBoundary/index.js","components/ErrorBoundary/error-boundary.component.js","components/RoutesMap/RouteMap/route-map.component.js","components/RoutesMap/RouteMap/index.js","components/RoutesMap/RoutesUploader/index.js","components/RoutesMap/RoutesUploader/routes-uploader.component.js","components/RoutesMap/RoutesCarousel/index.js","components/RoutesMap/RoutesCarousel/routes-carousel.component.js","components/RoutesMap/RoutesItinerary/index.js","components/RoutesMap/RoutesItinerary/routes-itinerary.component.js","components/Spacer/index.js","components/Spacer/spacer.component.js","containers/Home/home.container.js","containers/Home/index.js","containers/Profile/profile.container.js","containers/Profile/index.js","containers/NotFound/index.js","containers/NotFound/notfound.component.js","containers/MyRoutes/index.js","containers/MyRoutes/myRoutes.container.js","containers/ShowRoute/index.js","containers/ShowRoute/show-route.container.js","containers/FriendsRoutes/index.js","containers/FriendsRoutes/friendsRoutes.container.js","containers/Share/children/share-form.component.js","containers/Share/index.js","containers/Share/share.container.js","containers/Notifications/children/NotificationItem/index.js","containers/Notifications/children/NotificationItem/notification-item.component.js","containers/Notifications/children/NotificationsList/index.js","containers/Notifications/children/NotificationsList/notifications-list.component.js","containers/Notifications/index.js","containers/Notifications/notifications.component.js","layouts/PublicLayout/index.js","layouts/PublicLayout/public.layout.js","layouts/PrivateLayout/index.js","layouts/PrivateLayout/private.layout.js","routes.js","App.js","index.js"],"names":["Provider","id","label","image","value","registerLink","description","LoginComponent","className","Card","style","width","Img","variant","src","Body","Title","Text","selectPlaceholder","inputPlaholder","formButtonText","btnTxtWebId","btnTxtProvider","callbackUri","window","location","origin","errorsText","unknown","webIdNotValid","emptyProvider","emptyWebId","providers","getIdentityProviders","LoginModal","React","isOpen","setIsOpen","onClick","color","outline","Modal","show","onHide","ProviderItem","data","onSelect","radioName","checked","type","name","onChange","alt","RegisterComponent","props","next","state","canContinue","provider","register","protocol","host","selectProvider","e","setState","target","onSubmit","preventDefault","this","Form","href","rel","map","providerData","key","disabled","Component","RegisterContainer","RegisterModal","NavBar","Navbar","bg","expand","Brand","Image","Toggle","aria-controls","Collapse","Nav","Login","Register","RouteViade","items","media","comments","ImageViade","iri","author","publicationTime","ItemViade","longitude","latitude","order","elevation","VideoViade","NotificationViade","title","license","actor","object","published","summary","read","url","RouteToRDF","route","str","parseitems","i","length","parser","parse","a","engine","comunica","query","sources","result","resultToString","Promise","resolve","reject","text","on","chunk","getRoute","JSON","results","parseToFloat","cleanValue","split","replace","clean","parseFloat","GeoJSONToRoute","execute","content","geoJSON","getItems","coordinates","coor","index","selectParser","file","console","log","f","reader","FileReader","onload","onerror","readAsText","documentExists","documentUri","auth","fetch","headers","createDoc","options","deleteFile","method","createDocument","body","createDocumentWithTurtle","createNonExistentDocument","status","fetchLdflexDocument","ldflex","document","resourceExists","resourcePath","alert","discoverInbox","inboxDocument","inbox","getLinkedInbox","inboxLinkedPath","checkAppPermissions","userAppPermissions","appPermissions","every","permission","includes","checkSpecificAppPermission","webId","AppPermission","checkPermissions","permissions","errorMessage","userApp","AccessControlList","MODES","APPEND","READ","WRITE","CONTROL","message","checkOrSetInboxAppendPermissions","inboxPath","inboxAcls","getPermissions","inboxPublicPermissions","filter","perm","agents","modes","ACLFile","createACL","fc","FC","fetchNotifications","inboxURL","readFolder","folder","filesURL","files","notifications","RDFToNotification","noti","push","sort","b","Date","fetchNotification","sendNotification","opponent","createNotification","to","Error","findUserInboxes","paths","inboxes","currentPath","path","ldflexHelper","getDefaultInbox","inbox1","inbox2","find","addRouteSharedWithMe","itemExists","obj","rutas","createFile","stringify","readFile","docu","markAsRead","notification","NotificationToRDF","sparq","setRdfType","rdfType","do","fiddle","parseRdf","then","response","prepare","preparedQuery","store","wanted","ary2hash","Object","keys","formatted","displayHandler","err","ary","hash","dataType","rdf","uri","rowHandler","vars","resultAry","row","r","found","got","w","undefined","showText","showHtml","columnHeads","reverse","k","c","table","topRow","runFromLibrary","fiddleLibrary","fiddleName","run","newFiddle","loadLibrary","match","loadFromUrl","loadSparqlAndDo","fetcher","load","responseText","loadFromUrlPlain","arrayToNotification","sparqlFiddle","clearQuotes","string","SolidFileClient","UploadComponent","webid","useWebId","nameInput","createRef","descriptionInput","valueName","valueDescription","summitHandler","rutaPod","substring","rutaMedia","substr","indexOf","promise","ParserToRoute","putFile","parserToRDF","strRoute","Group","controlId","Label","Control","ref","current","placeholder","as","withIcon","withPreview","buttonText","imgExtension","maxFileSize","Button","UploadButton","useState","AuthNavBar","exact","logout","ErrorBoundary","error","errorInfo","whiteSpace","toString","componentStack","children","center","polyline","RouteMap","forEach","item","Math","round","Map","zoom","TileLayer","attribution","Marker","position","Polyline","positions","RouteUploader","RoutesCarousel","date","Carousel","interval","Item","Caption","RoutesItinerary","Spacer","HomeComponent","Container","Row","Col","xs","md","ProfileComponent","profileInput","activeProfile","prevProps","profile","Header","Value","Accordion","defaultActiveKey","eventKey","List","friend","withWebId","NotFoundComponent","height","textAlign","MyRoutesComponent","routes","pathname","currentSession","session","sessionString","obtainRoutesName","routesName","obtainRoutes","array","aux","RDFToRoute","getRoutes","ShowRoute","FriendsRoutesComponent","json","filesString","ShareFormComponent","setFriend","setRoute","shareRoute","licenseUrl","notificationHelper","NotificationTypes","OFFER","ShareComponent","useNotification","useCallback","NotificationItem","setSharing","isSharing","addSharedWithMe","margin","ListGroup","pop","NotificationsList","setNotifications","n","initNotifications","Notifications","setInbox","globalInbox","inboxName","shape","inboxUrl","useEffect","PublicLayout","component","rest","history","PrivateLayout","withAuthorization","errorMessages","permissionHelper","Routes","Home","FriendsRoutes","Profile","MyRoutes","Share","NotFound","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.448a1d17.chunk.js","sourcesContent":["type ProviderEntity = {\n  label: String,\n  image: String,\n  value: String,\n  registerLink: String,\n  description: String\n};\n\nexport default class Provider {\n  /*\n   *  Function to get providers. This is to mimic the future provider registry\n   */\n  static getIdentityProviders(): Array<ProviderEntity> {\n    return [\n      {\n        id: \"inrupt\",\n        label: \"Inrupt\",\n        image: \"/viade_es4c/img/inrupt.svg\",\n        value: \"https://inrupt.net/auth\",\n        registerLink: \"https://inrupt.net/register\",\n        description: \"Lorem ipsum dolor sit amet non ipsom dolor\"\n      },\n      {\n        id: \"solid-community\",\n        label: \"Solid Community\",\n        image: \"/viade_es4c//img/Solid.svg\",\n        value: \"https://solid.community\",\n        registerLink: \"https://solid.community/register\",\n        description: \"Lorem ipsum dolor sit non consectetur\"\n      }\n    ];\n  }\n}\n","import React from \"react\";\nimport {ProviderLogin} from \"@inrupt/solid-react-components\";\nimport {Provider} from \"../../../services\";\nimport Card from \"react-bootstrap/Card\";\nimport \"./login.css\";\n\n/**\n * Login Component which handles all the login logic\n * @returns {*}\n * @constructor\n */\nconst LoginComponent = () => {\n  return (\n    <nav className=\"nav nav__login\">\n      <Card className=\"text-center\" style={{ width: \"25rem\" }}>\n          <Card.Img variant=\"top\" src=\"/viade_es4c/img/logo.svg\" />\n          <Card.Body>\n              <Card.Title>Login of Viade es4c</Card.Title>\n              <Card.Text>\n                  <ProviderLogin\n                      selectPlaceholder=\"Pick an identity provider\"\n                      inputPlaholder=\"Please enter your WebID or the URL of your identity provider\"\n                      formButtonText=\"Login\"\n                      btnTxtWebId=\"Login with WebId\"\n                      btnTxtProvider=\"Login with Provider\"\n                      className=\"provider-login-component\"\n                      callbackUri={`${window.location.origin}` + /viade_es4c/}\n                      errorsText={{\n                          unknown: \"unknown error\",\n                          webIdNotValid: \"webIdNotValid\",\n                          emptyProvider: \"emptyProvider\",\n                          emptyWebId: \"emptyWebId\"\n                      }}\n                      providers={Provider.getIdentityProviders()}\n                  />\n              </Card.Text>\n          </Card.Body>\n      </Card>\n    </nav>\n\n  );\n};\n\nexport default LoginComponent;\n","//import LoginComponent from \"./login.component\";\nimport LoginModal from \"./login-modal.component\";\n\nexport default LoginModal;","import * as React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport {MDBBtn} from \"mdbreact\";\nimport LoginComponent from \"./login.component\";\n\n/**\n * Button triggering a modal pop-up with the LoginComponent\n * @returns {*}\n * @constructor\n */\nconst LoginModal = () => {\n\t\n\tconst [isOpen, setIsOpen] = React.useState(false);\n\n\tconst showModal = () => {\n\t\tsetIsOpen(true);\n\t};\n\n\tconst hideModal = () => {\n\t\tsetIsOpen(false);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<MDBBtn onClick={showModal} color=\"orange\" outline>\n\t\t\t\tLogin\n\t\t\t</MDBBtn>\n\t\t\t<Modal show={isOpen} onHide={hideModal}>\n\t\t\t\t<Modal.Body><LoginComponent/></Modal.Body>\n\t\t\t</Modal>\n\t\t</>\n\t);\n};\n\nexport default LoginModal;","import ProviderItem from \"./provider.item.component\";\n\nexport default ProviderItem;","import React from \"react\";\n\ntype Props = {\n  data: any,\n  onSelect: Function,\n  radioName: String,\n  id: String,\n  checked: Boolean\n};\n\nconst ProviderItem = ({ data, onSelect, radioName, id, checked }: Props) => (\n  <div>\n    <input\n      type=\"radio\"\n      name={radioName}\n      id={id}\n      onChange={onSelect}\n      value={data.registerLink}\n      checked={checked}\n    />\n    <div className=\"img-group\">\n      <img src={data.image} alt={data.label} />\n      <span className=\"label\">{data.label}</span>\n    </div>\n  </div>\n);\n\nexport default ProviderItem;\n","import React, {Component, Fragment} from \"react\";\nimport ProviderItem from \"./ProviderItem\";\nimport Card from \"react-bootstrap/Card\";\nimport Form from \"react-bootstrap/Form\";\nimport \"./register.component.css\";\nimport {MDBBtn} from \"mdbreact\";\n\ntype Provider = {};\n\ntype Register = {\n\tprovider: String\n};\n\ntype Props = {\n\tproviders: Array<Provider>\n};\n\ntype State = {\n\tregister: Register,\n\tcanContinue: false\n};\n\nclass RegisterComponent extends Component<Props, State> {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcanContinue: false,\n\t\t\tregister: {\n\t\t\t\tprovider: \"\"\n\t\t\t}\n\t\t};\n\t}\n\n\tnext = () => {\n\t\tconst {\n\t\t\tcanContinue,\n\t\t\tregister: { provider }\n\t\t} = this.state;\n\t\tconst { protocol, host } = window.location;\n\t\tif (canContinue) {\n\t\t\t//window.location = `${provider}?returnToUrl=${protocol}//${host}/register/success`;\n\t\t\twindow.location = `${provider}?returnToUrl=${protocol}//${host}/login`;\n\t\t}\n\t};\n\n\tselectProvider = (e) => {\n\t\tconst { register } = this.state;\n\t\tthis.setState({\n\t\t\tregister: { ...register, provider: e.target.value },\n\t\t\tcanContinue: true\n\t\t});\n\t};\n\n\tonSubmit = (e) => {\n\t\te.preventDefault();\n\t\tconst {\n\t\t\tcanContinue,\n\t\t\tregister: { provider }\n\t\t} = this.state;\n\t\tconst { protocol, host } = window.location;\n\t\tif (canContinue) {\n\t\t\t//window.location = `${provider}?returnToUrl=${protocol}//${host}/register/success`;\n\t\t\twindow.location = `${provider}?returnToUrl=${protocol}//${host}/login`;\n\t\t}\n\t};\n\n\trender() {\n\t\tconst {\n\t\t\tcanContinue,\n\t\t\tregister: { provider }\n\t\t} = this.state;\n\t\tconst { providers} = this.props;\n\n\t\treturn (\n\t\t\t<Card className=\"text-center\" style={{ width: \"25rem\" }}>\n\t\t\t\t<Card.Img variant=\"top\" src=\"/viade_es4c/img/logo.svg\" />\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<Card.Title>Make a SOLID account</Card.Title>\n\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t<Form onSubmit={this.onSubmit}>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<h1>Select Provider</h1>\n\t\t\t\t\t\t\t\t<div className=\"progress-bar\" />\n\t\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\thref=\"https://solid.inrupt.com/how-it-works\"\n\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\t\t\t>What is a provider?</a>\n\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t{providers.map((providerData) => (\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"p-item\" key={`div-${providerData.id}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t<ProviderItem\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={providerData}\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={providerData.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonSelect={this.selectProvider}\n\t\t\t\t\t\t\t\t\t\t\t\t\tradioName=\"providerRadio\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"registerRadio\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tid={`radio-${providerData.id}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={providerData.registerLink === provider}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<MDBBtn\n\t\t\t\t\t\t\t\tclassName=\"btn-solid\"\n\t\t\t\t\t\t\t\tonClick={this.next}\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tdisabled={!canContinue}\n\t\t\t\t\t\t\t\tcolor=\"orange\" outline\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tNext\n\t\t\t\t\t\t\t</MDBBtn>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t</Card.Body>\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t);\n\t}\n}\n\nexport default RegisterComponent;","import React, {Component} from \"react\";\nimport RegisterComponent from \"./register.component\";\nimport {Provider} from \"../../../services\";\n\ntype Props = {};\n\ntype State = {\n  providers: Array<Object>\n};\n\nclass RegisterContainer extends Component<Props, State> {\n  constructor(props) {\n    super(props);\n    this.state = { providers: [] };\n  }\n\n  async componentDidMount() {\n    const providers = await Provider.getIdentityProviders();\n    this.setState({ providers });\n  }\n\n  render() {\n    const { providers } = this.state;\n    return <RegisterComponent providers={providers} {...this.props} />;\n  }\n}\n\nexport default RegisterContainer;","import RegisterModal from \"./register-modal.component\";\n\nexport default RegisterModal;","import * as React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport {MDBBtn} from \"mdbreact\";\nimport RegisterContainer from \"./register.container\";\n\n/**\n * Button triggering a modal pop-up with the RegisterComponent\n * @returns {*}\n * @constructor\n */\nconst LoginModal = () => {\n\tconst [isOpen, setIsOpen] = React.useState(false);\n\n\tconst showModal = () => {\n\t\tsetIsOpen(true);\n\t};\n\n\tconst hideModal = () => {\n\t\tsetIsOpen(false);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<MDBBtn onClick={showModal} color=\"orange\" outline>\n\t\t\t\tRegister\n\t\t\t</MDBBtn>\n\t\t\t<Modal show={isOpen} onHide={hideModal}>\n\t\t\t\t<Modal.Body><RegisterContainer/></Modal.Body>\n\t\t\t</Modal>\n\t\t</>\n\t);\n};\n\nexport default LoginModal;","import NavBar from \"./nav-bar.component\";\n\nexport default NavBar;","import React from \"react\";\nimport {Image, Navbar} from \"react-bootstrap\";\nimport Nav from \"react-bootstrap/Nav\";\nimport LoginModal from \"./Login\";\nimport RegisterModal from \"./Register\";\n\n/**\n * Navigation bar which contains de actions of a user not logged in\n *  @returns {*}\n */\nconst NavBar = () => {\n\n  return (\n      <Navbar bg=\"light\" expand=\"lg\">\n          <Navbar.Brand href=\"/viade_es4c\"><Image src=\"/viade_es4c/img/logo.svg\" alt=\"Viade\" /></Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n              <Nav  className=\"mr-auto\">\n              </Nav>\n              <Nav>\n                  <LoginModal/>\n                  <RegisterModal/>\n              </Nav>\n          </Navbar.Collapse>\n      </Navbar>\n  );\n};\n\nexport default NavBar;\n","class RouteViade{\n\n    constructor(name,items,description=\"\", media=[], comments = []){\n        this.name=name;\n        this.items=items;\n        this.description=description;\n        this.media = media;\n        this.comments = comments;\n    }\n}\n\nexport default RouteViade;","class ImageViade{\n\n    constructor(iri,author,publicationTime){\n        this.iri=iri;\n        this.author=author;\n        this.publicationTime=publicationTime;\n    }\n}\n\nexport default ImageViade;","class ItemViade{\n\n    constructor(longitude,latitude,order,elevation=null){\n        this.longitude=longitude;\n        this.latitude=latitude;\n        this.elevation=elevation;\n        this.order=order;\n    }\n}\n\nexport default ItemViade;\n\n","class VideoViade{\n\n    constructor(iri, author, publicationTime){\n        this.iri=iri;\n        this.author=author;\n        this.publicationTime=publicationTime;\n    }\n}\n\nexport default VideoViade;","class NotificationViade{\n    constructor(title,license,actor,object,published,summary,target,read,url){\n        this.title=title;\n        this.license=license;\n        this.actor=actor;\n        this.object=object;\n        this.published=published;\n        this.summary=summary;\n        this.target=target;\n        this.read=read;\n        this.url=url;\n    }\n}\n\nexport default NotificationViade;","class RouteToRDF {\n    constructor(route) {\n        this.route = route;\n        this.str = \"\";\n    }\n\n    parse() {\n        this.str +=('@prefix : <#>.');\n        this.str +=('@prefix viade: <http://arquisoft.github.io/viadeSpec/>.');\n        this.str +=('@prefix schema: <http://schema.org/>.');\n        this.str +=('@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.');\n        this.str +=('@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.');\n\n        this.str +=(':myRoute a viade:Route;');\n        this.str +=('schema:name \"');\n        this.str +=(this.route.name);\n        this.str +=('\";');\n\n        if (this.route.description != null && this.route.name !== \"\") {\n            this.str +=('schema:description \"');\n            this.str +=(this.route.description);\n            this.str +=('\";');\n        }\n\n        this.parseitems();\n\n        return this.str;\n    }\n\n    parseitems() {\n        for (let i = 0; i < this.route.items.length ; i++) {\n            this.str +=('viade:point [');\n            if (this.route.items[i].elevation != null) {\n                this.str +=('schema:elevation ');\n                this.str +=(this.route.items[i].elevation);\n                this.str +=(';');\n            }\n\n            this.str +=('schema:latitude ');\n            this.str +=(this.route.items[i].latitude);\n            this.str +=(';');\n            this.str +=('schema:longitude ');\n            this.str +=(this.route.items[i].longitude);\n            this.str +=(';');\n\n            this.str +=('viade:order ');\n            this.str +=(this.route.items[i].order);\n\n            if (i === this.route.items.length - 1) {\n                this.str +=('].');\n            } else {\n                this.str +=('];');\n            }\n\n\n        }\n    }\n}\n\nexport default RouteToRDF;","import { RouteViade, ItemViade } from \"../../Model\";\n\nimport * as comunica from \"@comunica/actor-init-sparql\";\nclass RDFToRoute {\n\n  /**\n   * Parse route viade in RDF to a RouteViade\n   * @param {*} url URL of the route\n   * @return A promise\n   */\n  parse=async (url) => {\n    const engine=comunica.newEngine();\n    const sparql =\n      `PREFIX schema: <http://schema.org/>\n      PREFIX viade:<http://arquisoft.github.io/viadeSpec/>\n      PREFIX rdf:    <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n      \n      SELECT ?lat ?long ?order ?name ?description ?name ?elevation WHERE {\n       ?route a viade:Route.\n       ?route viade:point ?point .\n       ?point schema:latitude ?lat ;\n              schema:longitude ?long ;\n              viade:order ?order.\n      OPTIONAL {?route schema:description ?description.}\n      OPTIONAL {?route schema:name ?name.}\n      OPTIONAL {?point schema:elevation ?elevation.}\n      }`;\n      const result= await engine.query(sparql,{sources:[url]});\n      const { data } = await engine.resultToString(result, \"application/json\");\n      return new Promise((resolve,reject) => {\n        \n    \n    \n    let text=\"\";\n\n    data.on(\"data\", (chunk) => {\n      text+=chunk;  \n    });\n\n    data.on(\"end\",() => {\n      resolve(this.getRoute(JSON.parse(text)));\n   });\n      });\n    \n  };\n\n\n/**\n * @param {*} results Array of JSON objects with the items value\n * @returns RouteViade object\n */\n  getRoute=(results) => {\n    if(!results||!results.length) {return;}\n    let items=results.map((i) => new ItemViade(this.parseToFloat(i[\"?long\"]),this.parseToFloat(i[\"?lat\"]),this.parseToFloat(i[\"?order\"]),this.parseToFloat(i[\"?elevation\"])));\n    return new RouteViade(this.cleanValue(results[0][\"?name\"]),items,this.cleanValue(results[0][\"?description\"]));\n  };\n  /**\n   * Removes type of literals(RDF) and double quotes\n   *  @param {*} value value of literal\n   * \n   * Example: \"47.64458\"^^http://www.w3.org/2001/XMLSchema#decimal => 47.64458\n   */\n  cleanValue=(value) => {\n    if(!value)return;\n    return value.split(\"^^\")[0].replace(/['\"]+/g,\"\");\n  };\n\n  parseToFloat=(value) => {\n    if(!value){return;}\n    let clean=this.cleanValue(value);\n    return parseFloat(clean);\n\n  }\n\n}\n\nconst parser = new RDFToRoute();\n\nexport default parser;\n","import { ItemViade, RouteViade } from \"../../../Model\";\n\nclass GeoJSONToRoute {\n    \n  execute = (content) => {\n    return this.parse(content);\n  };\n\n  //Por ahora solo soportaremos LineString\n  parse = content => {\n    const geoJSON = JSON.parse(content);\n    const items = this.getItems(geoJSON.coordinates);\n    const route = new RouteViade(\"Unknown\", items);\n    return route;\n  };\n\n  getItems = coordinates => {\n    return coordinates.map((coor,index) => {\n      return new ItemViade(coor[0], coor[1],index);\n    });\n  };\n}\n\nexport default GeoJSONToRoute;","\nimport { GeoJSONToRoute } from \"./ParsersTypes\";\n\nclass ParserToRoute {\n  selectParser = (file) => {\n    const type = file.name.split(\".\")[1];\n    switch (type) {\n      case \"json\":\n      case \"geojson\":\n      case \"GeoJSON\":\n        return new GeoJSONToRoute(file);\n      default:\n        console.log(\"formato no soportado\");\n        break;\n    }\n  };\n\n  parse =  file => {\n    const f = file;\n    const parser = this.selectParser(f);\n    return new Promise((resolve, reject) => {\n      let reader = new FileReader();\n      reader.onload = ()=> {\n        resolve(parser.execute(reader.result));\n      };\n      reader.onerror=reject;\n      reader.readAsText(f);\n    });\n  };\n}\n\nconst parser = new ParserToRoute();\n\nexport default parser;\n","import auth from \"solid-auth-client\";\nimport ldflex from \"@solid/query-ldflex\";\n\nexport const documentExists = async (documentUri) =>\n  auth.fetch(documentUri, {\n    headers: {\n      'Content-Type': 'text/turtle'\n    }\n  });\n\nexport const createDoc = async (documentUri, options) => {\n  try {\n    return await auth.fetch(documentUri, options);\n  } catch (e) {\n    throw e;\n  }\n};\n\nexport const deleteFile = async (url) => {\n  try {\n    return await auth.fetch(url, { method: \"DELETE\" });\n  } catch (e) {\n    throw e;\n  }\n};\n\nexport const createDocument = async (documentUri, body = \"\") => {\n  try {\n    const options = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'text/turtle'\n      },\n      body\n    };\n    return await createDoc(documentUri, options);\n  } catch (e) {\n    throw e;\n  }\n};\n\nexport const createDocumentWithTurtle = async (documentUri, body = \"\") => {\n  try {\n    return createDoc(documentUri, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"text/turtle\"\n      },\n      body\n    });\n  } catch (e) {\n    throw e;\n  }\n};\n\nexport const createNonExistentDocument = async (documentUri, body = \"\") => {\n  try {\n    const result = await documentExists(documentUri);\n\n    return result.status === 404 ? createDocument(documentUri, body) : null;\n  } catch (e) {\n    throw e;\n  }\n};\n\nexport const fetchLdflexDocument = async (documentUri) => {\n  try {\n    const result = await documentExists(documentUri);\n    if (result.status === 404) {return null;}\n    const document = await ldflex[documentUri];\n    return document;\n  } catch (e) {\n    throw e;\n  }\n};\n\nexport const resourceExists = async (resourcePath) => {\n  try {\n\n    const result = await auth.fetch(resourcePath);\n   return result.status === 403 || result.status === 200;\n  } catch (e) {\n    alert(\"Error:ldflex-helper > resourceExists\");\n\n  }\n};\n\nexport const discoverInbox = async (document) => {\n  try {\n    const documentExists = await resourceExists(document);\n    if (!documentExists) {return false;}\n\n    const inboxDocument = await ldflex[document][\"ldp:inbox\"];\n    const inbox = inboxDocument ? await inboxDocument.value : false;\n    return inbox;\n  } catch (error) {\n    throw error;\n  }\n};\n\n/**\n * Given a resource link, find an inbox linked from it, if any exist\n * @param resourcePath\n * @returns {Promise<string|*>}\n */\nexport const getLinkedInbox = async (resourcePath) => {\n  try {\n    const inboxLinkedPath = await ldflex[resourcePath].inbox;\n    if (inboxLinkedPath) {\n      return inboxLinkedPath.value;\n    }\n    return \"\";\n  } catch (error) {\n    throw error;\n  }\n};\n","import {AccessControlList, AppPermission} from '@inrupt/solid-react-components';\n//import { errorToaster } from '@utils';\n\n// Check that all permissions we need are set. If any are missing, this returns false\nconst checkAppPermissions = (userAppPermissions, appPermissions) =>\n  appPermissions.every(permission => userAppPermissions.includes(permission));\n\n// Function to check for a specific permission included in the app\nexport const checkSpecificAppPermission = async (webId, permission) => {\n  const userAppPermissions = await AppPermission.checkPermissions(webId);\n  return userAppPermissions.permissions.includes(permission);\n};\n/**\n * SDK app will need all the permissions by the user pod so we check these permissions to work without any issues.\n * Error Message object is to hold the title, message, etc strings, as we can't use i18n libraries in this non-React file\n */\nexport const checkPermissions = async (webId, errorMessage) => {\n  /**\n   * Get permissions from trustedApp.\n   */\n  const userApp = await AppPermission.checkPermissions(webId);\n\n  /**\n   * Get modes permissions from solid-react-components\n   */\n  const permissions = AccessControlList.MODES;\n  const { APPEND, READ, WRITE, CONTROL } = permissions;\n\n  // If we are missing permissions that the app requires, display an error message with a Learn More link\n  if (\n    userApp === null ||\n    userApp.permissions === null ||\n    !checkAppPermissions(userApp.permissions, [APPEND, READ, WRITE, CONTROL])\n  ) {\n    /*\n    errorToaster(errorMessage.message, errorMessage.title, {\n      label: errorMessage.label,\n      href: errorMessage.href\n    });*/\n    alert(errorMessage.title+\": \"+errorMessage.message);\n  }\n};\n\n/**\n * Helper function to fetch permissions for the game inbox, and if permissions are not set\n * correctly, then add them. This repairs a broken inbox.\n * @param inboxPath\n * @returns {Promise<void>}\n */\nexport const checkOrSetInboxAppendPermissions = async (inboxPath, webId) => {\n  // Fetch app permissions for the inbox and see if Append is there\n  const inboxAcls = new AccessControlList(webId, inboxPath);\n  const permissions = await inboxAcls.getPermissions();\n  const inboxPublicPermissions = permissions.filter(perm => perm.agents === null);\n\n  const appendPermission = inboxPublicPermissions.filter(perm =>\n    perm.modes.includes(AccessControlList.MODES.APPEND)\n  );\n\n  if (appendPermission.length <= 0) {\n    // What do we do when the permission is missing? Add it!\n    try {\n      // Permission object to add. A null agent means Everyone\n      const permissions = [\n        {\n          agents: null,\n          modes: [AccessControlList.MODES.APPEND]\n        }\n      ];\n      const ACLFile = new AccessControlList(webId, inboxPath);\n      await ACLFile.createACL(permissions);\n    } catch (error) {\n      // TODO: Better error handling here\n      throw error;\n    }\n  }\n\n  return true;\n};\n","import { ldflexHelper } from \"./index\";\nimport auth from \"solid-auth-client\";\nimport FC from \"solid-file-client\";\nimport { RDFToNotification, NotificationToRDF } from \"../viade\";\n\nconst fc = new FC(auth);\n\nconst orderByDate = (list) => {\n  return list.sort((a, b) => new Date(b.published) - new Date(a.published));\n};\n\nexport const fetchNotifications = async (inboxURL) => {\n  if (!inboxURL){\n    return;\n  }\n  const folder = await fc.readFolder(inboxURL, []);\n  let filesURL = folder.files.map((file) => file.url);\n  let i = 0;\n  let notifications = [];\n  for (i; i < filesURL.length; i++) {\n    let noti = await RDFToNotification.parse(filesURL[i]);\n    noti.url = filesURL[i];\n    notifications.push(noti);\n\n  }\n  return orderByDate(notifications);\n};\n\nexport const fetchNotification = async (url) => {\n  return await RDFToNotification.parse(url);\n};\n\n\n\nexport const sendNotification = async (\n  opponent,\n  content,\n  createNotification,\n  to\n) => {\n  try {\n    if (to) {\n      return createNotification(content, to);\n    }\n    /**\n     * If the opponent doesn't have an inbox, show an error\n     */\n    throw new Error(\"Error: The opponent does not have an available inbox\");\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport const findUserInboxes = async (paths) => {\n  try {\n    let inboxes = [];\n    for await (const path of paths) {\n      const { path: currentPath } = path;\n      const inbox = await ldflexHelper.discoverInbox(currentPath);\n\n      if (inbox) {\n        inboxes = [...inboxes, { ...path, path: inbox }];\n      }\n    }\n\n    return inboxes;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport const getDefaultInbox = (inboxes, inbox1, inbox2) =>\n  inboxes.find((inbox) => inbox.name === inbox1) ||\n  inboxes.find((inbox) => inbox.name === inbox2);\n\nexport const addRouteSharedWithMe = async (url, webId) => {\n  //console.log(url);\n  const base = \"/public/viade/shared_with_me.txt\";\n  const path = webId.split(\"/profile/card#me\")[0] + base;\n  if (!(await fc.itemExists(path))) {\n    const obj = { rutas: [url] };\n    await fc.createFile(path, JSON.stringify(obj), \"text/plain\", {});\n    return;\n  }\n  let docu = await fc.readFile(path);\n  let obj = JSON.parse(docu);\n  obj.rutas.push(url);\n  await fc.createFile(path, JSON.stringify(obj), \"text/plain\", {});\n};\n\nexport const markAsRead = async (notification) => {\n  notification.read = true;\n  let docu = NotificationToRDF.parse(notification);\n  await fc.createFile(notification.url, docu, \"text/turtle\", {});\n};\n","import * as rdf from \"rdflib\";\nclass SparqlFiddle{\n\n    setRdfType = (type) => { this.rdfType = type; };\n\n    do = (fiddle) => {\n      return new Promise((resolve, reject) => {\n        this.parseRdf(fiddle).then( (response) => {\n            this.prepare(fiddle).then( (preparedQuery) => {\n                this.execute(fiddle,preparedQuery).then( (results) => {\n                    this.store = fiddle.store;\n                    if(fiddle.wanted===\"Array\"){\n                        resolve(results)\n                    }\n                    else if(fiddle.wanted===\"Hash\") {\n                        resolve( this.ary2hash(fiddle,results) );\n                    }\n                    else if(results.length < 1) {\n                        resolve( \"No results!\"  );\n                    }\n                    else if(fiddle.wanted===\"Value\") {\n                        let key = ( Object.keys(results[0])[0]  );\n                        resolve( results[0][key] );\n                    }\n                    else { \n                        let formatted = this.displayHandler(fiddle,results);\n                        resolve(formatted);\n                    }  \n                },err => reject(err))\n            },err => reject(err))\n        },err => reject(err))\n      })\n    };\n\n    ary2hash =(fiddle,ary) => {\n        let hash = {};\n        let a;\n        for(a in ary){\n            a = ary[a];\n            hash[a[fiddle.key]] = a;\n        }\n        return hash;\n    };\n    parseRdf = (fiddle) => { return new Promise((resolve, reject) => {\n        if(!fiddle.data){\n              return resolve();\n        }\n        let type = fiddle.dataType;\n        if(typeof(document)!==\"undefined\") {type = this.rdfType;}\n        if(!type)  {type = \"text/turtle\";}\n        let endpointUrl = \"http://example.org/inMemory\";\n        try {\n            rdf.parse(\n                fiddle.data, fiddle.store, rdf.sym(endpointUrl).uri, type\n            );\n            resolve();\n        }\n        catch(err) { reject(err); }\n    });};\n    prepare = (fiddle) => {\n        return new Promise((resolve, reject)=>{\n            try {\n              let query = rdf.SPARQLToQuery(fiddle.query,false,fiddle.store);\n              resolve(query);\n            }\n            catch(err) { reject(err); }\n        })\n    };\n    execute =  (fiddle,preparedQuery) => {\n        let rowHandler = fiddle.rowHandler || this.rowHandler;\n        return new Promise((resolve, reject)=>{\n            let wanted = preparedQuery.vars;\n            let resultAry = [];\n            fiddle.store.query((preparedQuery, results) =>  {\n                if(typeof(results)===\"undefined\") { reject(\"No results.\"); }\n                else { \n                    let row = rowHandler(fiddle,wanted,results) ;\n                    if(row) {resultAry.push(row);}\n                }\n            }, {} , function(){resolve(resultAry);} )\n        })\n    };\n    rowHandler =(fiddle,wanted,results) => {\n        let row = {};\n        let r;\n        for(r in results){\n            let found = false;\n            let got = r.replace(/^\\?/,\"\");\n            if(wanted.length){\n                let w;\n                for(w in wanted){\n                    if(got===wanted[w].label){ found=true; continue; }\n                }\n                if(!found) {continue;}\n            } \n            row[got]=results[r].value;\n        }\n        if(fiddle.rowHandler){\n            row = fiddle.rowHandler(row);\n        }\n        return(row);\n    };\n/*\n  DATA DISPLAY\n*/\n    displayHandler = (fiddle,results) => {\n        let type = (fiddle.wanted)\n                 ? fiddle.wanted\n                 : (typeof(document)===undefined)\n                   ? \"Text\"\n                   : \"HTML\";\n        if(type===\"Text\") {return this.showText(results);}\n        if(type===\"HTML\") {return this.showHtml(results);}\n    };\n    showText = (results) => {\n        let columnHeads = Object.keys(results[0]).reverse();\n        let str = \"\\n\";\n        let r;\n        for(r in results){\n            //let row = \"\";\n            let k;\n            for(k in columnHeads){\n                str += `${columnHeads[k]} : ${results[r][columnHeads[k]]}\\n`;\n            }\n            str += \"\\n\";\n        }\n        return(str);\n    };\n    /* TBD : refactor to build a DOM object rather than a string\n    */\n    showHtml = (results) => {\n        let columnHeads = Object.keys(results[0]).reverse();\n        let table = \"<table>\";\n        let topRow = \"\";\n        let c;\n        for(c in columnHeads){\n            topRow += `<th>${columnHeads[c]}</th>`;\n        }\n        table += `<tr>${topRow}</tr>`;\n        let r;\n        for(r in results){\n            let row = \"\";\n            let k;\n            for(k in columnHeads){\n                row += `<td>${results[r][columnHeads[k]]}</td>`;\n            }\n            table += `<tr>${row}</tr>`;\n        }\n        table += \"</table>\";\n        return(table);\n    };\n/* \n  USER FUNCTIONS\n*/\n/*\n    PREFIX : <http://example.org/inMemory#>\n    SELECT ?name ?format ?data ?query WHERE { \n        ?x :name ?name; :dataFormat ?format; :data ?data; :query ?query . \n    }\n*/\n    runFromLibrary = ( fiddleLibrary, fiddleName, options) => {\n        return new Promise((resolve, reject) => {\n            let fiddle = {\n              wanted : \"Array\",\n                data : fiddleLibrary,\n                query :`\n    PREFIX : <http://example.org/inMemory#>\n    SELECT ?type ?data ?query WHERE { \n        ?x :name \"${fiddleName}\"; :dataFormat ?type; :data ?data; :query ?query . \n    }\n`,\n            };\n            this.run( fiddle ).then( (fiddle) => {\n                let newFiddle = {\n                    wanted : options.wanted,\n                      data : fiddle[0].data,\n                     query : fiddle[0].query,\n                  dataType : fiddle[0].type\n                };\n                this.run( newFiddle ).then( (results) => {\n                    resolve(results)\n                }, err => reject(err) )\n            }, err => reject(err) )\n        }, err => console.log(\"CH:\"+err) )\n    };\n    loadLibrary = ( fiddleLibrary) => {\n        return new Promise((resolve, reject)=>{\n            let fiddle = {\n              wanted : \"Hash\",\n                 key : \"name\",\n                data : fiddleLibrary,\n                query :`\n    PREFIX : <http://example.org/inMemory#>\n    SELECT ?name ?type ?data ?query WHERE { \n        ?x :name ?name :dataFormat ?type; :data ?data; :query ?query . \n    }\n`,\n            };\n            this.run( fiddle ).then( (results) => {\n                resolve(results)\n            }, err => reject(err) )\n        }, (err) => console.log(\"CH: \"+err) );\n    };\n    run = (fiddle) => { \n      return new Promise((resolve, reject)=>{\n        fiddle.store = (fiddle.data.length>0)\n                     ? rdf.graph()\n                     : this.store;\n        if( fiddle.data.match(/^http/ ) ){\n            this.loadFromUrl(fiddle,\"data\").then( (fiddle) => {\n                this.loadSparqlAndDo( fiddle ).then( (results) => {\n                    resolve(results)\n                }, (err) => reject(err) )\n            }, (err) => reject(err) )\n        }\n        else {\n            this.loadSparqlAndDo( fiddle ).then( (results) => {\n                resolve(results)\n            }, (err) => reject(err) )\n        }\n      })\n    };\n/* \n  DATA LOADING\n*/\n    loadSparqlAndDo = ( fiddle ) => {\n      return new Promise((resolve, reject) =>{\n        if( fiddle.query.match( /^http/ ) ){\n            this.loadFromUrl(fiddle,\"query\").then( (fiddle) => {\n                this.do(fiddle).then( (results) => {\n                    resolve(results)\n                }, (err) => reject(err) )\n            }, (err) =>  reject(err) )\n        }\n        else {\n            this.do(fiddle).then( (results) => {\n                resolve(results)\n            }, (err) => reject(err) );\n        }\n      })\n    };\n    loadFromUrl = (fiddle,type) => {\n      let url = fiddle[type];\n      return new Promise((resolve, reject)=>{\n        let fetcher = new rdf.fetcher( rdf.graph() );\n        try {\n            fetcher.load(url).then( (response) => {\n                // replace the url with it's content\n                fiddle[type] = response.responseText;\n                resolve( fiddle )\n            })\n        } catch(err) { reject(err) }\n      })\n    };\n    loadFromUrlPlain = (url) => {\n      return new Promise((resolve, reject) => {\n        let fetcher = new rdf.fetcher( rdf.graph() );\n        try {\n            fetcher.load(url).then( response => {\n                resolve( response.responseText );\n            })\n        } catch(err) { reject(err); }\n      });\n    }\n}\n\nconst sparq=new SparqlFiddle();\nexport default sparq;","import { NotificationViade } from \"../../Model\";\nimport { sparqlFiddle } from \"../../../utils\";\n\nclass RDFToNotification {\n  async parse(url) {\n    const sparql = `PREFIX terms: <http://purl.org/dc/terms#>\n      PREFIX n0: <https://www.w3.org/ns/activitystreams#>\n      PREFIX schem: <http://schema.org/>\n      PREFIX n1: <https://creativecommons.org/licenses/by-sa/4.0/>\n      PREFIX c: <https://christianpelaez98.solid.community/profile/card#>\n      PREFIX XML: <http://www.w3.org/2001/XMLSchema#>\n      PREFIX ter: <https://www.w3.org/ns/solid/terms#>\n      \n      SELECT ?title ?license ?actor ?object ?published ?summary ?target ?read\n      WHERE {\n      ?notification terms:title ?title;\n      schem:license ?license;\n      n0:actor ?actor;\n      n0:object ?object;\n      n0:published ?published;\n      n0:summary ?summary;\n      n0:target ?target;\n      ter:read ?read.\n      }`;\n\n    let fiddle = {\n      data: url,\n      query: sparql,\n      wanted: \"Array\"\n    };\n\n    const result = await sparqlFiddle.run(fiddle).then(\n      results => {\n        return results;\n      },\n      err => console.log(err)\n    );\n    return this.arrayToNotification(result);\n  }\n\n  arrayToNotification = result => {\n    return new NotificationViade(\n      result[0][\"title\"],\n      result[0][\"license\"],\n      result[0][\"actor\"],\n      result[0][\"object\"],\n      result[0][\"published\"],\n      result[0][\"summary\"],\n      result[0][\"target\"],\n      result[0][\"read\"]===\"true\"\n    );\n  };\n}\n\nconst parser = new RDFToNotification();\n\nexport default parser;\n","class NotificationToRDF{\n\n    parse=(notification)=>{\n        console.log(notification.title);\n        return `@prefix terms: <http://purl.org/dc/terms#>.\n        @prefix as: <https://www.w3.org/ns/activitystreams#>.\n        @prefix schema: <http://schema.org/>.\n        @prefix solid: <https://www.w3.org/ns/solid/terms#>.\n        @prefix xsd: <http://www.w3.org/2001/XMLSchema#>.\n        @prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.\n        \n        <> a as:Offer;\n            schema:license <`+this.clearQuotes(notification.license)+`>;\n            terms:title \"`+notification.title+`\";\n            as:summary \"`+notification.description+`\";\n            as:actor <`+this.clearQuotes(notification.actor)+`>;\n            as:target <`+this.clearQuotes(notification.target)+`>;\n            as:object <`+this.clearQuotes(notification.object)+`>;\n            solid:read \"`+notification.read+`\"^^xsd:boolean;\n            as:published \"`+notification.published+`\"^^xsd:dateTime.`;\n    }\n\n    clearQuotes=(string)=>{\n        if(!string)return;\n        return string.replace(/['\"]+/g, '');\n    }\n}\n\nconst parser=new NotificationToRDF();\nexport default parser;","import React from \"react\";\nimport SolidFileClient from \"solid-file-client\";\nimport auth from \"solid-auth-client\";\nimport Form from \"react-bootstrap/Form\";\nimport {ParserToRoute, RouteToRDF} from \"../../../viade\";\nimport {VideoViade, ImageViade} from \"../../../viade\";\nimport Button from \"react-bootstrap/Button\";\nimport ImageUploader from \"react-images-upload\";\nimport { useWebId } from \"@inrupt/solid-react-components\";\nimport \"./upload.component.css\";\n\nconst fc = new SolidFileClient(auth);\n\nexport const UploadComponent = () => {\n\tconst webid = useWebId();\n\tlet files;\n\tlet media = [];\n\tlet nameInput = React.createRef();//Campo nombre\n\tlet descriptionInput = React.createRef();//campo descripcion\n\n\n\tlet valueName = \"\";\n\tlet valueDescription = \"\";\n\n\n\n\tconst fileSelectedHadler = (e) => {\n\t\tfiles = e.target.files;\n\t};\n\tconst mediaSelectedHadler = (e) => {\n\t\tmedia.push(e);\n\t};\n\tconst handleNameChange = () => {\n\t\tvalueName = nameInput.current.value;\n\t};\n\tconst handleDescriptionChange = () => {\n\t\tvalueDescription = descriptionInput.current.value;\n\t};\n\n\tconst summitHandler = async (e) => {\n\t\te.preventDefault();\n\t\t//setUploadStatus(true)//empezamos a subir\n\t\t//let parser = new ParserToRoute(files[0]);\n\n\tif(webid) {\n\t\tconst file = files[0];\n\t\tconst rutaPod = webid.substring(0, webid.length - 16) + \"/public/viade/routes/\";\n\t\tconst rutaMedia = webid.substring(0, webid.length - 16) + \"/public/viade/media/\";\n\t\t\t//webid -> https://usernamme.solid.community/profile/card#me\n\t\t\tconst url = rutaPod + file.name.substr(0, file.name.indexOf(\".\")) + \".ttl\";\n\t  //Empezamos a parsear el archivo\n\n\t\tlet promise = ParserToRoute.parse(file);\n\t\tlet route = await promise.then((route) => {\n\t\t\treturn route;\n\t\t});\n\n\t\troute.name = valueName;//Valor del campo del nombre\n\t\troute.description = valueDescription;//Valor del campo de descripcion\n\n\t\t// Subida de archivos\n\t\ttry {\n\t\t\tfor (let i=0; i<media[0].length; i++) {\n\t\t\t\t//console.log(media[0].length);\n\t\t\t\t//console.log(media[0]);\n\t\t\t\tawait fc.putFile(rutaMedia + media[0][i].name, media[0][i], media[0][i].type);\n\t\t\t\tif (media[0][i].name.includes(\".mp4\")){\n\t\t\t\t\troute.media.push(new VideoViade(rutaMedia,webid.substring(0, webid.length - 16),new Date()));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\troute.media.push(new ImageViade(rutaMedia,webid.substring(0, webid.length - 16),new Date()));\n\t\t\t\t}\n\n\t\t\t}\n\t\t} catch (err) {\n\t\t\talert(\"Error en la subida de archivos\");//console.error(err);\n\t\t}\n\n\t\tlet parserToRDF = new RouteToRDF(route);\n\t\tlet strRoute = parserToRDF.parse();\n\n\n\t\t//Ya tenemos un String para meter en SolidFileClient\n\t\ttry {\n\t\t\t//const res = await fc.putFile(url, file, file.type);\n\t\t\tawait fc.createFile(url, strRoute, \"text/turtle\", {});\n\t\t} catch (err) {\n\t\t\talert(\"Error uploading files\");//console.error(err); // Da warning aquí por usar la consola\n\t\t}\n\n\t}else {\n\t\talert(\"You need to be logged in\");\n\t}\n\t\t\t//setUploadStatus(false)//terminamos de subir\n\t};\n\n\n\n\treturn (\n\n\t\t<Form>\n\t\t\t{/** Campo del nombre **/}\n\t\t\t<Form.Group controlId=\"formName\">\n\t\t\t\t<Form.Label>Name:</Form.Label>\n\t\t\t\t<Form.Control ref={nameInput} onChange={() => handleNameChange()}\n\t\t\t\t\t\t\t  type=\"text\" placeholder=\"Enter the name of the route\"/>\n\t\t\t</Form.Group>\n\t\t\t{/** Campo de la descripción**/}\n\t\t\t<Form.Group controlId=\"formDescription\">\n\t\t\t\t<Form.Label>Description:</Form.Label>\n\t\t\t\t<Form.Control ref={descriptionInput} onChange={() => handleDescriptionChange()}\n\t\t\t\t\t as=\"textarea\" placeholder=\"Enter the description of the route\"/>\n\t\t\t\t<Form.Text className=\"text-muted\">\n\t\t\t\t\t(Optional)\n\t\t\t\t</Form.Text>\n\t\t\t</Form.Group>\n\t\t\t{/** Selección de archivo **/}\n\t\t\t<input type=\"file\" onChange={fileSelectedHadler}/>\n\t\t\t<ImageUploader\n\t\t\t\twithIcon={true}\n\t\t\t\twithPreview={true}\n\t\t\t\tbuttonText='Choose images and videos'\n\t\t\t\tonChange={mediaSelectedHadler}\n\t\t\t\timgExtension={[\".jpg\", \".gif\", \".png\", \".gif\",\".mp4\"]}\n\t\t\t\tmaxFileSize={5242880}\n\t\t\t/>\n\t\t\t{/** Botón de subida de archivo **/}\n\t\t\t<Button onClick={summitHandler}>Upload</Button>\n\t\t</Form>\n\n\t);\n};","import UploadButton from \"./upload-modal.component\";\n\nexport default UploadButton;","import React from \"react\";\nimport {MDBBtn} from \"mdbreact\";\nimport Image from \"react-bootstrap/Image\";\nimport \"./upload-button.css\";\nimport Modal from \"react-bootstrap/Modal\";\nimport {UploadComponent} from \"./upload.component\";\n\n/**\n * Button triggering a modal pop-up with the UploadComponent\n * @returns {*}\n */\nconst UploadButton = () => {\n\tconst [isOpen, setIsOpen] = React.useState(false);\n\n\tconst showModal = () => {\n\t\tsetIsOpen(true);\n\t};\n\n\tconst hideModal = () => {\n\t\tsetIsOpen(false);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<MDBBtn onClick={showModal}  color=\"primary\" outline>\n\t\t\t\t<Image className=\"button-img\" src=\"/viade_es4c/img/upload.svg\"/>\n\t\t\t\t<p className=\"font-weight-bold less-margin\">Upload a route</p>\n\t\t\t</MDBBtn>\n\t\t\t<Modal show={isOpen} onHide={hideModal}>\n\t\t\t\t<Modal.Body><UploadComponent/></Modal.Body>\n\t\t\t</Modal>\n\t\t</>\n\t);\n};\n\nexport default UploadButton;\n","import AuthNavBar from \"./auth-nav-bar.component\";\n\nexport default AuthNavBar;","import React from \"react\";\nimport {Image, Navbar} from \"react-bootstrap\";\nimport Nav from \"react-bootstrap/Nav\";\nimport UploadButton from \"./UploadButton\";\nimport auth from \"solid-auth-client\";\nimport {NavLink} from \"react-router-dom\";\n\n/**\n* Navigation bar which contains de actions of a user logged in\n*/\nconst AuthNavBar = () => {\n\n  const logOut=() => {\n    auth.logout();\n    window.location=\"/viade_es4c\";\n  };\n\n  return (\n      <Navbar bg=\"light\" expand=\"lg\">\n          <Navbar.Brand href=\"/viade_es4c/\"><Image src=\"/viade_es4c/img/logo.svg\" alt=\"Viade\" /></Navbar.Brand>\n          <UploadButton/>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n              <Nav  className=\"mr-auto\"/>\n              <Nav>\n                  <NavLink exact to=\"/viade_es4c/notifications\">\n                      <Image className=\"logout-img\" src=\"/viade_es4c/img/bell.svg\" alt=\"Notifications\" />\n                  </NavLink>\n                  <NavLink exact to=\"/viade_es4c/myRoutes\" className=\"link\">MyRoutes</NavLink>\n                  <NavLink exact to=\"/viade_es4c/friendsRoutes\" className=\"link\">FriendsRoutes</NavLink>\n                  <NavLink exact to=\"/viade_es4c/profile\" className=\"link\">Profile</NavLink>\n                  <NavLink exact to=\"/viade_es4c/share\" className=\"link\">Share</NavLink>\n                  <Image className=\"logout-img\" src=\"/viade_es4c/img/logout.svg\" onClick={logOut}/>\n              </Nav>\n          </Navbar.Collapse>\n      </Navbar>\n  );\n};\n\nexport default AuthNavBar;\n","import ErrorBoundary from \"./error-boundary.component\";\n\nexport default ErrorBoundary;\n","import React from \"react\";\n\n//https://codepen.io/gaearon/pen/wqvxGa?editors=0010\n/**\n* Component that shows the Javascript error without react crash\nMore info:https://reactjs.org/docs/error-boundaries.html\n*/\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null, errorInfo: null };\n  }\n  \n  componentDidCatch(error, errorInfo) {\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      error: error,\n      errorInfo: errorInfo\n    })\n    // You can also log error messages to an error reporting service here\n  }\n  \n  render() {\n    if (this.state.errorInfo) {\n      // Error path\n      return (\n        <div>\n          <h2>Something went wrong.</h2>\n          <details style={{ whiteSpace: 'pre-wrap' }}>\n            {this.state.error && this.state.error.toString()}\n            <br />\n            {this.state.errorInfo.componentStack}\n          </details>\n        </div>\n      );\n    }\n    // Normally, just render children\n    return this.props.children;\n  }  \n}\n\nexport default ErrorBoundary;","import React, {Component} from \"react\"\nimport {Map, Polyline, TileLayer, Marker} from \"react-leaflet\"\n\nlet center = [];\nlet polyline = [];\n\nexport default class RouteMap extends Component<> {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.props.route.items.forEach(item => polyline.push([item.latitude,item.longitude]));\n\t\tcenter = polyline[Math.round(polyline.length/2)];\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Map center={center} zoom={14}>\n\t\t\t\t<TileLayer\n\t\t\t\t\tattribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n\t\t\t\t\turl=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n\t\t\t\t/>\n\t\t\t\t<Marker position={polyline[0]}/>\n\t\t\t\t<Polyline color=\"blue\" positions={polyline} />\n\t\t\t\t<Marker position={polyline[polyline.length-1]}/>\n\t\t\t</Map>\n\t\t)\n\t}\n};","import RouteMap from \"./route-map.component\";\n\nexport default RouteMap;","import RouteUploader from \"./routes-uploader.component\";\n\nexport default RouteUploader;","import React, {Component} from \"react\";\nimport \"./routes-uploader.css\";\n\n/**\n * Component featuring the route information\n */\nclass RouteUploader extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.name = props.route.name;\n\t\tthis.description = props.route.description;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"route-uploader\">\n\t\t\t\t<h1 className=\"uploader-text\">{this.name}</h1>\n\t\t\t\t<p className=\"uploader-text\">{this.description}</p>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default RouteUploader;","import RoutesCarousel from \"./routes-carousel.component\";\n\nexport default RoutesCarousel;","import React from \"react\";\nimport Carousel from \"react-bootstrap/Carousel\";\nimport \"./routes-carousel.component.css\";\n\n\n/**\n * Slide with the images of the route\n */\nclass RoutesCarousel extends React.Component {\n\n\tdata = [\n\t\t{ src: \"/viade_es4c/img/inrupt.svg\", date: \"Imagen 1\", description: \"Description\"},\n\t\t{ src: \"/viade_es4c/img/logo.svg\", date: \"Imagen 2\", description: \"Description\"},\n\t\t{ src: \"/viade_es4c/img/Solid.svg\", date: \"Imagen 3\", description: \"Description\"}\n\t];\n\n\trender() {\n\t\treturn (\n\t\t\t<Carousel interval={5000}>\n\t\t\t\t{this.data.map(function(object){\n\t\t\t\t\treturn <Carousel.Item key={object.src}>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tclassName=\"d-block route-img\"\n\t\t\t\t\t\t\tsrc={object.src}\n\t\t\t\t\t\t\talt={object.date}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Carousel.Caption>\n\t\t\t\t\t\t\t<h3>{object.date}</h3>\n\t\t\t\t\t\t</Carousel.Caption>\n\t\t\t\t\t</Carousel.Item>;\n\t\t\t\t})}\n\t\t\t</Carousel>\n\t\t);\n\t}\n\n}\n\nexport default RoutesCarousel;\n\n","import RoutesItinerary from \"./routes-itinerary.component\";\n\nexport default RoutesItinerary;","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\n\n/**\n * Element listing all the different points of interest of the route\n */\nclass RoutesItinerary extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.data = this.props.route.items;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"itinerary\">\n\t\t\t\t<h2>Points:</h2>\n\t\t\t\t{this.data.map(function (object) {\n\t\t\t\t\treturn <Card key={object.latitude + object.longitude}>\n\t\t\t\t\t\t<p className=\"coordinate\">{object.latitude}, {object.longitude}</p>\n\t\t\t\t\t</Card>\n\t\t\t\t})};\n\t\t\t</div>\n\t\t);\n\t}\n\n}\n\nexport default RoutesItinerary;","import Spacer from \"./spacer.component\";\n\nexport default Spacer;","import React from \"react\";\nimport \"./spacer.component.css\";\n\nconst Spacer = props => {\n\treturn (\n\t\t<div className=\"spacer\">\n\t\t\t&nbsp;\n\t\t</div>\n\t)\n}\n\nexport default Spacer;","import React from \"react\";\nimport {Image} from \"react-bootstrap\";\n\nimport \"./home.container.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport {Spacer} from \"../../components\";\n\n/**\n * Home component that returns the homepage\n */\nexport const HomeComponent = () => {\n    return (\n        <Container>\n            {/* Logo row */}\n            <Row>\n                <Col xs={12}></Col>\n                <Col xs={12} md={8} className=\"logo-div home-div\">\n                    <Image src=\"/viade_es4c/img/logo.svg\" alt=\"Viade\"/>\n                </Col>\n                <Col xs={12}></Col>\n            </Row>\n            {/* Description row */}\n            <Row>\n                <Col xs={12}></Col>\n                <Col xs={12} md={8} className=\"home-div\">\n                    <p>Viade is a Solid project developed by third year students of the University of Oviedo\n                        Software Engineering degree in the Software Architecture subject. It offers a route sharing\n                        application following the SOLID principles. This is a site where all your data always remains\n                        yours. <a href=\"https://github.com/Arquisoft/viade_es4c\">Developed by team es4c</a>.</p>\n                </Col>\n                <Col xs={12}></Col>\n            </Row>\n            {/* What you can do row */}\n            <Row>\n                <Col xs={12}></Col>\n                <Col xs={6} md={2} className=\"home-div\">\n                    <Image src=\"/viade_es4c/img/home/uploadroute.svg\" alt=\"Upload a route\" className=\"fill-image\"/>\n                    <p>Upload a new route</p>\n                </Col>\n                <Col xs={6} md={2} className=\"home-div\">\n                    <Image src=\"/viade_es4c/img/home/uploadmedia.svg\" alt=\"Upload images and videos\" className=\"fill-image\"/>\n                    <p>Complete it with images and videos</p>\n                </Col>\n                <Col xs={6} md={2} className=\"home-div\">\n                    <Image src=\"/viade_es4c/img/home/shareroute.svg\" alt=\"Share it\" className=\"fill-image\"/>\n                    <p>Share it with whoever you want</p>\n                </Col>\n                <Col xs={6} md={2} className=\"home-div\">\n                    <Image src=\"/viade_es4c/img/home/keepyours.svg\" alt=\"Keep the ownership of your data\" className=\"fill-image\"/>\n                    <p>And keep the ownership of all this</p>\n                </Col>\n                <Col xs={12}></Col>\n            </Row>\n            {/* Empty rows */}\n            <Row>\n                <Col><Spacer/></Col>\n            </Row>\n            <Row>\n                <Col><Spacer/></Col>\n            </Row>\n            {/* Solid/UniOvi/Inrupt row */}\n            <Row>\n                <Col xs={12}></Col>\n                <Col xs={4} md={2} className=\"home-div logo-div\">\n                    <Image src=\"/viade_es4c/img/Solid.svg\" alt=\"Solid\" className=\"fill-image\"/>\n                </Col>\n                <Col xs={4} md={3} className=\"logo-div home-div\">\n                    <Image src=\"/viade_es4c/img/home/uniovi.jpg\" alt=\"Universidad de Oviedo\"/>\n                </Col>\n                <Col xs={4} md={2} className=\"home-div logo-div\">\n                    <Image src=\"/viade_es4c/img/inrupt.svg\" alt=\"Inrupt\" className=\"fill-image\"/>\n                </Col>\n                <Col xs={12}></Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default HomeComponent;\n","import {HomeComponent} from \"./home.container\";\n\nexport default HomeComponent;\n","import React from \"react\";\nimport {List, Value, withWebId} from \"@solid/react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport {Image} from \"react-bootstrap\";\nimport {Spacer} from \"../../components\";\nimport Container from \"react-bootstrap/Container\";\nimport Card from \"react-bootstrap/Card\";\nimport \"./profile.container.css\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Button from \"react-bootstrap/Button\";\nimport {Link} from \"react-router-dom\";\n\nclass ProfileComponent extends React.Component {\n    state = { profileInput: \"\", activeProfile: \"\" };\n\n    componentDidUpdate(prevProps) {\n        const webId = this.props.webId;\n        if (webId && webId !== prevProps.webId) {\n            this.setState({profileInput: webId});\n            this.setState({activeProfile: webId});\n        }\n    }\n\n    viewProfile(profile) {\n        this.setState({ profileInput: profile, activeProfile: profile });\n    }\n\n    render() {\n        const profileInput = this.state.profileInput;\n        const activeProfile  = this.state.activeProfile;\n        return (\n            <Container>\n                {/* Spacer row */}\n                <Row>\n                    <Col xs={12} md={12}>\n                        <Spacer/>\n                    </Col>\n                </Row>\n                {/* Description row */}\n                <Row>\n                    <Col xs={12}/>\n                    <Col xs={12} md={8} className=\"profile-card\">\n                        <Card className=\"text-center\">\n                            <Card.Header>\n                                <Image src=\"/viade_es4c/img/profile/user.png\" className=\"profile-img\"/>\n                                <Value src={`[${activeProfile}].name`}/>\n                            </Card.Header>\n                            <Card.Body>\n                                <Card.Title>\n                                    <Image src=\"/viade_es4c/img/Solid.svg\" className=\"profile-img\"/>\n                                    <a href={profileInput}>\n                                        {profileInput}\n                                    </a>\n                                </Card.Title>\n                                <Accordion defaultActiveKey=\"0\">\n                                    <Card>\n                                        <Card.Header>\n                                            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                                                Friends\n                                            </Accordion.Toggle>\n                                        </Card.Header>\n                                        <Accordion.Collapse eventKey=\"0\">\n                                            <List src={`[${activeProfile}].friends`}>{(friend) =>\n                                                <li key={friend}>\n                                                    <Value src={`[${friend}].name`}>{`${friend}`}</Value>\n                                                </li>}\n                                            </List>\n                                        </Accordion.Collapse>\n                                    </Card>\n                                </Accordion>\n                                <Card.Text>\n                                    <Link to=\"/myRoutes\">\n                                        <Image src=\"/viade_es4c/img/home/keepyours.svg\" className=\"profile-img\"/>\n                                        <h2>My routes</h2>\n                                    </Link>\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col xs={12}/>\n                </Row>\n            </Container>\n        );\n    }\n}\nexport default withWebId(ProfileComponent);","import ProfileComponent from \"./profile.container\";\nimport {withWebId} from \"@solid/react\";\n\nexport default withWebId(ProfileComponent);","import NotFoundComponent from \"./notfound.component\";\n\nexport default NotFoundComponent;\n","import React from 'react';\nimport {Link, NavLink} from 'react-router-dom';\n\nconst NotFoundComponent = () => {\n\treturn (\n\t    <div className=\"ErrorImage\">\n\t\t\t<NavLink to=\"/\">\n\t\t\t\t<img src=\"/viade_es4c/img/error404.jpg\" alt=\"error\" height=\"50%\" width=\"50%\"/>\n\t\t\t</NavLink>\n\t\t\t<p style={{textAlign: \"center\"}}>\n\t\t\t\t<Link to=\"/\">Go back Home </Link>\n\t\t\t</p>\n\t\t</div>\n\t);\n};\n\nexport default NotFoundComponent;\n","import MyRoutesComponent from \"./myRoutes.container\";\n\nexport default MyRoutesComponent;\n\n","//COmponentes generales\n//Componentes React\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\n//Librerias\nimport auth from \"solid-auth-client\";\nimport FC from \"solid-file-client\";\nimport {RDFToRoute} from \"../../viade\";\n\n\nclass MyRoutesComponent extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = { \n            routes: []\n        };\n    }\n\n    getRoutes() {\n        return this.state.routes.map((obj) => (\n            <div className=\"text-center\">\n                <Link key={obj.name} to={{\n                        pathname: \"/viade_es4c/showRoute\",\n                        state: {\n                            route: obj\n                        }\n                }}>\n                    <h3>{obj.name}</h3>\n                </Link>\n            </div>));\n    }\n\n    async componentDidMount(){\n        const fc = new FC(auth); //With fc we can manage files\n\n        // Obtengo el link de la sesion\n        let session = (await auth.currentSession()).webId;\n        let sessionString = session.split(\"profile\")[0] + \"public/viade/routes\";\n\n        let routesName = await this.obtainRoutesName(fc, sessionString);\n        this.obtainRoutes(sessionString, routesName);\n    }\n\n    async obtainRoutesName(fc, sessionString){\n        // Obtengo los nombres de los archivos\n        if(!await fc.itemExists(sessionString)) {console.error(\"no se escuentra la carpeta viade\");return [];}\n        let folder = await fc.readFolder(sessionString);\n        let array = folder.files;\n        return array;\n    }\n\n    async obtainRoutes(sessionString, routesName){\n        // Con los nombres de los archivos, los obtengo y los parseo de RDF a Route\n        let aux = [];\n        for (let r of routesName){\n            let promise = RDFToRoute.parse(sessionString + \"/\" + r.name);\n            let route=await  promise.then((result) => result);\n            aux.push(route);\n        }\n        this.setState({routes: aux});\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"container center-block vlsection1\">\n                    <h1 className=\"text-center\">Rutas</h1>\n                    {this.getRoutes()}\n                </div>\n            </div>\n        );\n    }    \n    }  \n\nexport default MyRoutesComponent;\n","import {ShowRoute} from \"./show-route.container\";\n\nexport default ShowRoute;","import React, {Component} from \"react\";\nimport {\n\tRouteMap,\n\tRoutesCarousel,\n\tRoutesItinerary,\n\tRouteUploader,\n\tSpacer\n} from \"../../components\";\nimport \"./show-route.css\"\n\n/**\n * Page which prints a Route and all its info\n */\nexport class ShowRoute extends Component {\n\n\t/**\n\t * The page receives a route through the state\n\t * @param props\tContaining the route to display\n\t */\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.route = this.props.location.state.route;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"grid-container\">\n\t\t\t\t<RouteMap route={this.route} className=\"route-map\"/>\t\t\t\t{/* Map */}\n\t\t\t\t<RouteUploader route={this.route}/>\t\t\t\t\t\t\t\t\t{/* Basic route info */}\n\t\t\t\t<RoutesItinerary route={this.route}/>\t\t\t\t\t\t\t\t{/* List of points of the route */}\n\t\t\t\t{/* Images of the route */}\n\t\t\t\t{(this.route.media.length !== 0) ? <div className=\"image-slide\"><RoutesCarousel/></div> : <div/>}\n\t\t\t\t<Spacer/>\n\t\t\t</div>\n\t\t);\n\t};\n}","import FriendsRoutesComponent from \"./friendsRoutes.container\";\n\nexport default FriendsRoutesComponent;\n\n","//COmponentes generales\n//Componentes React\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\n//Librerias\nimport auth from \"solid-auth-client\";\nimport FC from \"solid-file-client\";\nimport {RDFToRoute} from \"../../viade\";\n\nclass FriendsRoutesComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n          routes: []\n      };\n  }\n\n  getRoutes() {\n      return this.state.routes.map((obj) => (\n          <div className=\"text-center\">\n              <Link key={obj.name} to={{\n                      pathname: \"/viade_es4c/showRoute\",\n                      state: {\n                          route: obj\n                      }\n              }}>\n                  <h3>{obj.name}</h3>\n              </Link>\n          </div>));\n  }\n\n  async componentDidMount(){\n      const fc = new FC(auth); //With fc we can manage files\n\n      // Obtengo el link de la sesion\n      let session = (await auth.currentSession()).webId;\n      let sessionString = session.split(\"profile\")[0] + \"public/viade\";\n\n      let json = await this.obtainRoutesName(fc, sessionString);\n      this.obtainRoutes(json);\n  }\n\n  async obtainRoutesName(fc, sessionString){\n      // Obtengo los nombres de los archivos\n      let filesString = \"\";\n      try{\n        filesString = await fc.readFile(sessionString + \"/shared_with_me.txt\");\n        return JSON.parse(filesString);\n      }catch{\n        return null;\n      }\n      \n  }\n\n  async obtainRoutes(json){\n      // Con los nombres de los archivos, los obtengo y los parseo de RDF a Route\n      if(!json){return;}\n      let aux = [];\n      for (let r of json.rutas){\n          let promise = RDFToRoute.parse(r);\n          let route=await  promise.then((result) => result);\n          aux.push(route);\n      }\n      this.setState({routes: aux});\n  }\n\n  render() {\n      return (\n          <div>\n              <div className=\"container center-block vlsection1\">\n                  <h1 className=\"text-center\">Friends Routes</h1>\n                  {this.getRoutes()}\n              </div>\n          </div>\n      );\n  }    \n  } \n\nexport default FriendsRoutesComponent;","import React from \"react\";\nimport { NotificationTypes } from \"@inrupt/solid-react-components\";\nimport { notificationHelper} from \"../../../utils\";\n\nconst ShareFormComponent = ({\n    webId,\n    friend,\n    setFriend,\n    route,\n    setRoute,\n    sendNotification\n}) => {\n    const handleSubmit = e => {\n        e.preventDefault();\n        shareRoute();\n    };\n\n    const shareRoute = async () => {\n        const licenseUrl = \"https://creativecommons.org/licenses/by-sa/4.0/\";\n        const inboxes = await notificationHelper.findUserInboxes([\n            { path: friend, name: \"Global\" }\n        ]);\n\n        const to = inboxes[0];\n        const target = friend;\n\n        await sendNotification(\n            {\n                title: \"Route share\",\n                summary: \"has shared you a route.\",\n                actor: webId,\n                object: route,\n                target\n            },\n            to.path,\n            NotificationTypes.OFFER,\n            licenseUrl\n        );\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <label>\n                Route's webID:\n        <input\n                    type=\"text\"\n                    name=\"route\"\n                    onChange={e => setRoute(e.target.value)}\n                />\n            </label>\n            <label>\n                Insert your friend's webID:\n        <input\n                    type=\"text\"\n                    name=\"friend\"\n                    onChange={(e) => setFriend(e.target.value)}\n                />\n            </label>\n            <input type=\"submit\" value=\"Submit\" />\n        </form>\n    );\n};\n\nexport default ShareFormComponent;\n","import ShareComponent from \"./share.container\";\n\nexport default ShareComponent;","import React,{useState,useCallback} from \"react\";\nimport {ShareFormComponent} from \"./children\";\nimport {useNotification} from '@inrupt/solid-react-components';\nimport \"./share-container.css\";\n\nconst ShareComponent = (props)=> {\n  const [friend, setFriend] = useState('');\n  const[route,setRoute]=useState('');\n    const {webId}=props;\n    const { createNotification} = useNotification(webId);\n\n    const sendNotification=useCallback(\n      async (content, to, type, license) => {\n        try {\n          await createNotification(content, to, type, license);\n        } catch (error) {\n          alert('Error: ShareComponent > sendNotification');\n        }\n      },\n      [  createNotification]\n    );\n\n    return (\n      <div>\n        <p>.</p>\n        <p>.</p>\n        <h1>Share Routes</h1>\n        <ShareFormComponent {...{webId,friend,setFriend,route,setRoute,sendNotification}} ></ShareFormComponent>\n      </div>\n    );\n  \n}\n\nexport default ShareComponent;\n","import NotificationItem from \"./notification-item.component\";\n\nexport default NotificationItem;","import React from \"react\";\nimport {notificationHelper} from \"../../../../utils\";\nimport Card from \"react-bootstrap/Card\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Button from \"react-bootstrap/Button\";\n\nconst NotificationItem = (props) => {\n\tconst {notification, webId, setSharing, isSharing} = props;\n\n\tconst addSharedWithMe = async (notification) => {\n\t\tif (!notification.read) {\n\t\t\tsetSharing(true);\n\t\t\tawait notificationHelper.addRouteSharedWithMe(notification.object, webId);\n\t\t\tawait notificationHelper.markAsRead(notification);\n\t\t\tsetSharing(false);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Card style={{margin: \"0px 0px 10px 0px\", width: \"50%\"}}>\n\t\t\t<Card.Header>\n                <h4 className=\"d-inline-block\">{notification.title}</h4>\n                {!notification.read ?\n                    <Button disabled={isSharing} onClick={() => addSharedWithMe(notification)}\n                        className=\"float-right d-inline-block\">\n                        Accept Route\n                    </Button> : null}\n\t\t\t</Card.Header>\n\t\t\t<ListGroup variant=\"flush\">\n\t\t\t\t<ListGroup.Item>From: {notification.actor.toString()\n\t\t\t\t\t.substr(8, notification.actor.toString().length - 40)}</ListGroup.Item>\n\t\t\t\t<ListGroup.Item>Route: {notification.object.toString().split(\"/\").pop()}</ListGroup.Item>\n\n\t\t\t</ListGroup>\n\t\t</Card>\n\t);\n};\n\nexport default NotificationItem;\n","import NotificationsList from \"./notifications-list.component\";\nexport default NotificationsList;","import React, { useState } from \"react\";\nimport { notificationHelper } from \"../../../../utils\";\nimport NotificationItem from \"../NotificationItem\";\n\nconst NotificationsList = props => {\n  const { inboxes } = props;\n  const [notifications, setNotifications] = useState();\n  const [isSharing, setSharing] = useState(false);\n  const initNotifications = async () => {\n    if (notifications) return;\n    try {\n      let n = await notificationHelper.fetchNotifications(inboxes[0]);\n      setNotifications(n);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  initNotifications();\n  return (\n    <div>\n      {notifications\n        ? notifications.map((notification, index) => (\n            <NotificationItem\n              key={index}\n              isSharing={isSharing}\n              setSharing={setSharing}\n              notification={notification}\n              setNotifications={setNotifications}\n              {...props}\n            />\n          ))\n        : null}\n    </div>\n  );\n};\n\nexport default NotificationsList;\n","import Notifications from \"./notifications.component\";\nexport default Notifications;","import React,{useState,useCallback,useEffect} from \"react\";\nimport {NotificationsList} from \"./children\";\nimport {ldflexHelper} from \"../.././utils\";\n\nconst Notifications = props => {\n    const [inboxes, setInbox] = useState([]);\n    const { webId } = props;\n    \n    const discoverInbox = useCallback(async () => {\n        try {\n          let inboxes = [];\n          /**\n           * Get user's global inbox path from pod.\n           */\n          const globalInbox = await ldflexHelper.discoverInbox(webId);\n    \n          if (globalInbox) {\n            inboxes = [\n              ...inboxes,\n              { path: globalInbox, inboxName: 'Global', shape: 'default' }\n            ];\n          }\n          /**\n           * If user doesn't has inbox in his pod will show an error and link to\n           * know how fix it.\n           */\n          if (inboxes.length === 0) {\n            alert(\"Error you dont have an inbox\");\n          }\n          setInbox(inboxes);\n        } catch (error) {\n          /**\n           * Show general errors\n           */\n          alert(\"Error seleccionando inbox\");\n        }\n      }, [webId]);\n\n      const inboxUrl = inboxes.map(item => item.path);\n\n      useEffect(() => {\n        if (webId) {\n          discoverInbox();\n        }\n      }, [webId,discoverInbox]);\n  return (\n    <div style={{margin: \"50px\"}}>\n      <h1>Notifications</h1>\n      <NotificationsList inboxes={inboxUrl} {...props}/>\n    </div>\n  );\n};\n\nexport default Notifications;\n","import PublicLayout from \"./public.layout\";\n\nexport default  PublicLayout;","import React from \"react\";\nimport {Route} from \"react-router-dom\";\nimport {useWebId} from \"@inrupt/solid-react-components\";\nimport {AuthNavBar, NavBar} from \"../../components\";\n\n/**\n* Controls the paths that can be accessed by any user (may or may not be logged in). \nIn addition, it also shows NavBar or Auth NavBar depending on whether the user is logged in or not.\n*@param {Component} component - The Container to be shown\n*@param {String} path - path asigned to the container\n*/\nconst PublicLayout = (props) => {\n  const { component: Component, ...rest } = props;\n  const webId=useWebId();\n  return (\n    <Route\n      {...rest}\n      component={({ history, location, match }) => (\n        <div>\n          {webId ? (\n            <AuthNavBar {...{ history, location, match, webId }} />\n          ) : (\n            <NavBar\n              {...{ history, location, match }}\n            />\n          )}\n          <Component {...{ history, location, match }} />\n        </div>\n      )}\n    />\n  );\n};\n\nexport default PublicLayout;\n","import PrivateLayout from \"./private.layout\";\n\nexport default PrivateLayout;","import React, {useEffect} from \"react\";\nimport {Route} from \"react-router-dom\";\nimport {withAuthorization} from \"@inrupt/solid-react-components\";\nimport {AuthNavBar} from \"../../components\";\nimport {permissionHelper} from \"../../utils\";\n\n/**\n * Controls the paths that can be accessed only by logged users. If a not logged-in user tries to access that path he will be redirected to \"/login\".In addition, it also shows Auth NavBar.\n * @param Component\n * @param webId\n * @param location\n * @param history\n * @param rest\n * @returns {*}\n * @constructor\n */\nconst PrivateLayout =({component:Component, webId, location, history, ...rest }) => {\n  const errorMessages = {\n    message: \"The application permissions are not properly set. Please add additional permissions and try again\",\n    title: \"Error\",\n    label: \"Learn more\",\n    href: \"https://solidsdk.inrupt.net/public/general/en/app-permissions.html\"\n  };\n  useEffect(() => {\n    if (webId) {\n      permissionHelper.checkPermissions(webId, errorMessages);\n    }\n  }, [webId, errorMessages]);\n\n  return  (\n    <Route\n      {...rest}\n      component={({ history, location, match }) => (\n        <div>\n          <AuthNavBar {...{ history, location, match, webId }} />\n          <Component {...{ history, location, match,webId }} />\n        </div>\n      )}\n    />\n  );\n};\n\nexport default withAuthorization(PrivateLayout);\n","import React, {Fragment} from \"react\";\nimport {BrowserRouter as Router, Switch} from \"react-router-dom\";\n\nimport {\n\tFriendsRoutes,\n\tHome,\n\tMyRoutes,\n\tNotFound,\n\tProfile,\n\tShowRoute,\n\tShare,\n\tNotifications\n} from \"./containers\";\n\nimport {PrivateLayout, PublicLayout} from \"./layouts\";\n\n\n/**\n * Manages the BrowserRouter and so, all the route navigation\n * @returns {*}\n * @constructor\n */\nconst Routes = () => {\n\treturn (\n\t\t<Router>\n\t\t\t<Fragment>\n\t\t\t\t{/* Chooses the first route matching the direction and loads it */}\n\t\t\t\t<Switch>\n\t\t\t\t\t{\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t  PublicLayout para rutas que se tienen que mostrar a todos los usuarios(estén o no loggeados)\n\t\t\t\t\t\t  NotLoggedInLayout para rutas que se tienen que mostrar a usuarios que NO están loggeados\n\t\t\t\t\t\t  PrivateLayout para rutas que se tienen que mostrar a usuarios que SI están loggeados\n\t\t\t\t\t\t*/\n\t\t\t\t\t}\n\t\t\t\t\t<PublicLayout component={Home} path=\"/viade_es4c\" exact/> {/* Homepage - \"/\" */}\n\t\t\t\t\t<PrivateLayout component={FriendsRoutes} path=\"/viade_es4c/friendsRoutes\" exact/> {/* Friends - \"/friends\" */}\n\t\t\t\t\t<PrivateLayout component={ShowRoute} path=\"/viade_es4c/route\" exact/> {/* ShowRoute - \"/route\" */}\n\t\t\t\t\t<PrivateLayout component={Profile} path=\"/viade_es4c/profile\" exact/> {/* Profile - \"/profile\" */}\n\t\t\t\t\t<PrivateLayout component={MyRoutes} path=\"/viade_es4c/myRoutes\" exact/> {/* My Routes - \"/myROutes\" */}\n\t\t\t\t\t<PrivateLayout component={ShowRoute} path=\"/viade_es4c/showRoute\" exact/> {/* View Map - \"/viewMap\" */}\n\t\t\t\t\t<PrivateLayout component={Share} path=\"/viade_es4c/share\" exact /> {/* Share - \"/share\" */}\n\t\t\t\t\t<PrivateLayout component={Notifications} path=\"/viade_es4c/notifications\" exact /> {/* Notifications - \"/notifications\" */}\n\t\t\t\t\t<PublicLayout component={NotFound} path=\"*\"/> {/* Error - \"*\" */}\n\t\t\t\t</Switch>\n\t\t\t</Fragment>\n\t\t</Router>\n\t);\n};\n\n\nexport default Routes;","import React from \"react\";\nimport \"./App.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport \"./bootstrap.min.css\";\n\nimport Routes from \"./routes\";\n\nfunction App() {\n  return (\n    <Routes/>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport {ErrorBoundary} from \"./components\";\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<ErrorBoundary>\n\t\t<App/>\n\t</ErrorBoundary>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}